server:
  port: 8001 #服务端口
#spring相关配置
spring:
  application:
    name: mcroservice-payment  #服务名
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource  #当前数据源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver  #数据库驱动包
    url: jdbc:mysql://localhost:3306/db01?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true
    username: root
    password: 19887460
  redis:
    host: 192.168.0.104
    port: 6379
    password:
    database: 2
    timeout: 20000  #如果在一个 timeout 时间内，没有数据的交互，是否断开连接。0代表永不断开
    #    集群环境打开下面注释，单机不需要打开
    #    cluster:
    #      集群信息
    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx
    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections
    #      maxRedirects: 3
    lettuce:
      pool:
        max-idle: 8    #最大空闲
        min-idle: 0    #最小空闲
        max-active: 8  #最大连接数
        max-wait: -1   #最大阻塞等待时间(负数表示没限制)
  cloud:  #Seata配置
    alibaba:
      seata:
        enableAutoDataSourceProxy: false # 关闭seata的数据源自动代理
        application-id: ${spring.application.name}
        tx-service-group: default_tx_group
        service:
          vgroup-mapping:
            default_tx_group: default

#mybatis:配置
mybatis:
  mapperLocations: classpath:dao/*.xml
  type-aliases-package: com.springcloud.pojo    # 所有pojo别名类所在包

#eureka配置
eureka:
  client:
    #表示是否将自己注册进eureka  默认为true
    register-with-eureka: true
    #是否从EurekaServer中抓取已有的注册信息，默认为true，单点无所谓，集群必须设置true才能和ribbon使用负载均衡
    fetch-registry: true
    service-url:
      #集群配置
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
  instance:
    #服务名称修改
    instance-id: payment8001
    #访问路径可以显示ip地址
    prefer-ip-address: true

feign:
  hystrix:
    enabled: true

#zookeeper:
#  address: 127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183
#  timeout: 20000
